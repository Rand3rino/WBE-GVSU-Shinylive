[{"name":"app.R","content":"\r\n## https://debruine.github.io/shinyintro/data.html\r\nlibrary(shiny)\r\nlibrary(tidyverse)\r\nlibrary(plotly)\r\nlibrary(googlesheets4)\r\ngs4_deauth()\r\nsheet_id <- \"https://docs.google.com/spreadsheets/d/1Y8HZf93GiC_8XjK7nxqZONcTmi4Ck7EH96hR4q6Kbio\"\r\nN1counts <- read_sheet(sheet_id)\r\nN1counts$Date <- as.Date(as.character(N1counts$Date), \"%y%m%d\")\r\n\r\n# Define UI for application that draws a line chart\r\nui <- fluidPage(\r\n\r\n    # Application title\r\n    titlePanel(\"WBE-Analysis\"),\r\n\r\n    # Sidebar with a dropdown for number site \r\n    sidebarLayout(\r\n        sidebarPanel(\r\n          selectInput(\"SiteSelect\",\r\n                        \"Select Site to view\",\r\n                        choices = c(\"CS\", \"GG\", \"GO\", \"GR\", \"WB\", \"WK\", \"WY\"))\r\n        ),\r\n\r\n        # Show a plot of the n1 counts\r\n        mainPanel(\r\n           plotOutput(\"N1Plot\")\r\n        )\r\n    )\r\n)\r\n\r\n# Define server logic required to draw a line chart\r\nserver <- function(input, output) {\r\n\r\n    output$N1Plot <- renderPlot({\r\n        N1Site <- N1counts %>% filter(Site == input$SiteSelect)\r\n        ggplot(N1Site, aes(x=Date, y=`N1 GC/100mL`)) + geom_line() + geom_point() + theme_bw()\r\n    })\r\n}\r\n\r\n# Run the application \r\nshinyApp(ui = ui, server = server)\r\n","type":"text"}]
